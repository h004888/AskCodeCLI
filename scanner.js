import fs from "fs";
import path from "path";

async function scanDir(dir, allowedExtensions, skipFolders) {
  let results = []; // S·ª≠ d·ª•ng let thay v√¨ const ƒë·ªÉ c√≥ th·ªÉ g√°n l·∫°i

  try {
    const entries = await fs.promises.readdir(dir, { withFileTypes: true });

    for (const entry of entries) {
      const full = path.join(dir, entry.name);

      // üî• B·ªè qua c√°c th∆∞ m·ª•c kh√¥ng c·∫ßn qu√©t
      if (entry.isDirectory()) {
        if (!skipFolders.includes(entry.name.toLowerCase())) {
          // S·ª¨A L·ªñI ·ªû ƒê√ÇY: Ph·∫£i `await` l·ªùi g·ªçi ƒë·ªá quy
          const subResults = await scanDir(full, allowedExtensions, skipFolders);
          results.push(...subResults);
        }
      } 
      // üî• L·ªçc theo ph·∫ßn m·ªü r·ªông
      else if (entry.isFile()) {
        const ext = path.extname(entry.name).toLowerCase();
        if (allowedExtensions.includes(ext)) {
          results.push(full);
        }
      }
    }
  } catch (err) {
    // B·ªè qua c√°c l·ªói truy c·∫≠p th∆∞ m·ª•c (v√≠ d·ª•: permission denied)
    if (err.code !== 'EPERM' && err.code !== 'EACCES') {
        console.error("‚ö†Ô∏è L·ªói khi ƒë·ªçc th∆∞ m·ª•c:", dir, "-", err.message);
    }
  }

  return results;
}

export default scanDir;